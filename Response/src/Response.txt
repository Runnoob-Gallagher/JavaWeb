响应消息： 服务端给客户端发送消息
    数据格式：
        *响应字符串格式：
          HTTP/1.1 200
          Set-Cookie: JSESSIONID=032B7D1C09B49309340ADD73214CE97C; Path=/Response; HttpOnly
          Content-Type: text/html;charset=UTF-8
          Content-Length: 101
          Date: Sun, 30 Aug 2020 03:10:11 GMT

          <html>
            <head>
              <title>Response</title>
            </head>
            <body>
            Hello Response!
            </body>
          </html>

        1.响应行
            1.组成：协议/版本 响应状态码 状态码描述  HTTP/1.1 200
            2.响应状态码：服务器告诉客户端浏览器本次请求和响应得一个状态
                1.状态码都是3位数字
                2.分类：
                    1.1XX   服务器接收客户端消息，但是没有接收完成，等待一段时候后，发送1XX状态码
                    2.2XX   成功
                    3.3XX   重定向。302-->重定向  304-->访问缓存
                    4.4XX   客户端错误   404--->请求路径没有对应资源  405--->请求方法没有对应doXXX方法
                    5.5XX   服务器错误   服务器端错误。 500--->服务器内部出现异常  看代码
        2.响应头
            1.Content-Type:服务器告诉客户端本次响应体以及编码格式 text/html;charset=UTF-8  用对应的方式去解析
            2.Content-disposition:服务器告诉客户端以什么格式打开响应体数据
                   * 值：
                        * in-line:默认值，在当前页面内打开
                        * attachment;filename=xxx：以附件形式打开响应体。文件下载

        3.响应空行
        4.响应体
            传输的数据

response对象：
    功能：设置响应消息
        1.  设置响应行
            1.格式：HTTP/1.1 200 OK
            2.设置状态码：setStatus(int sc)
        2.  设置响应头: setHeader(String name,String value)
        3.  设置响应体
            步骤：
                1.获取输出流：
                * 字符输出流： PrintWriter getWriter()

                * 字节输出流：ServletOutputStream getOutputStream()

                2.使用输出流。将数据输出到客户端浏览器

实现：
    1，重定向
        1.设置状态码为302
                response.setStatus(302);
                //设置响应头location
                response.setHeader("location","/Response/responseDemo02");

                //简单重定向方法：sendRedirect  等价于上面两句
                response.sendRedirect("/Response/responseDemo02");
        特点对比：
            重定向特点： redirect
                1.地址栏发生变化
                2.重定向可以访问其他服务器得资源，就是可以访问其他网站，比如京东
                3.重定向是两次请求，所以不能使用request域对象共享资源

            转发特点： forward
                1.转发资源路径不变
                2.转发只能访问当前服务器下的资源
                3.转发是在一次请求中发生的，可以使用request对象共享资源

        绝对路径：
            规则：判断定义的路径给谁用？ 就是来判断请求从哪发出的
                * 给客户端浏览器使用：需要加虚拟目录（项目的访问路径）  比如在浏览器中访问资源，就要加虚拟目录。本来就是给客户端浏览器使用
                * 给服务器使用：不需要加虚拟目录          比如转发，就是在服务器内部进行使用的，就不用加虚拟目录

            动态获取虚拟目录：request.getContextPath();

    2.服务器输出字符数据到浏览器
        *步骤：
             1.获取字符输出流
             2.输出数据

        *乱码问题：需要编码格式一遍客户端浏览器能够正确输出
            1.PrintWriter pw = response.getWrinter();获取的流得默认编码是ISO-8859-1
            2.设置改流得默认编码器
            3.告诉浏览器响应响应体使用的编码

